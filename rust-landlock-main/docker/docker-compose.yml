version: '3.8'

services:
  db:
    build:
      context: ../
      dockerfile: docker/Dockerfile.postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: "sandboxuser"
      POSTGRES_PASSWORD: "supernanny"
      POSTGRES_DB: "sandboxdb"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sandboxuser -d sandboxdb"]
      interval: 2s
      timeout: 5s
      retries: 15
    networks:
      - sandbox-net
    # Optional security improvement:
    # ports: []  # Remove port exposure if not needed

  sandboxer:
    build:
      context: ../
      dockerfile: docker/Dockerfile.sandboxer
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      NON_INTERACTIVE: "1"
    volumes:
      - ../logs:/tmp
    networks:
      - sandbox-net
    security_opt:
      - seccomp=unconfined
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    devices:
      - "/dev:/dev"
    tty: true
    stdin_open: true
    command: ["--", "ls", "-l"]
    # Add resource constraints
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

volumes:
  postgres_data:

networks:
  sandbox-net:
    driver: bridge
    # Optional explicit IPAM configuration
    ipam:
      config:
        - subnet: 172.28.0.0/16