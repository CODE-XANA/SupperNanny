---
- name: Deploy SuperNanny Frontend (Rust + Yew)
  hosts: supernanny
  gather_facts: yes
  become: false

  vars:
    user_home: "{{ ansible_user_dir }}"
    project_root: "{{ user_home }}/SupperNanny"

    frontend_dir:        "{{ project_root }}/SuperNanny_front/frontend"
    static_server_dir:   "{{ project_root }}/SuperNanny_front/static_server"
    static_server_binary: "{{ project_root }}/SuperNanny_front/target/release/static_server"

    rustup_bin:   "{{ user_home }}/.cargo/bin/rustup"
    cargo_bin:    "{{ user_home }}/.cargo/bin/cargo"
    binstall_bin: "{{ user_home }}/.cargo/bin/cargo-binstall"
    trunk_bin:    "{{ user_home }}/.cargo/bin/trunk"

  tasks:
    - name: "Step 1/7: Ensure wasm32-unknown-unknown target is installed"
      command: "{{ rustup_bin }} target add wasm32-unknown-unknown"
      changed_when: false

    - name: "Step 2/7: Install cargo-binstall (if missing)"
      shell: |
        source "$HOME/.cargo/env"
        {{ cargo_bin }} install cargo-binstall --locked
      args:
        executable: /bin/bash
        creates: "{{ binstall_bin }}"

    - name: "Step 3/7: Check for existing Trunk"
      stat:
        path: "{{ trunk_bin }}"
      register: trunk_status

    - name: Install Trunk with cargo-binstall (if missing)
      shell: |
        source "$HOME/.cargo/env"
        {{ binstall_bin }} trunk --no-confirm
      args:
        executable: /bin/bash
      when: not trunk_status.stat.exists

    - name: "Step 4/7: Build frontend with Trunk (release)"
      shell: |
        source "$HOME/.cargo/env"
        {{ trunk_bin }} build --release
      args:
        chdir: "{{ frontend_dir }}"
        executable: /bin/bash

    - name: "Step 5/7: Build static_server (release)"
      shell: |
        source "$HOME/.cargo/env"
        {{ cargo_bin }} build --release
      args:
        chdir: "{{ static_server_dir }}"
        executable: /bin/bash
      register: build_result
      failed_when: build_result.rc != 0

    - name: "Step 6/7: Verify static_server binary exists"
      stat:
        path: "{{ static_server_binary }}"
      register: binary_status
      failed_when: not binary_status.stat.exists

    - name: "Step 7/7: Install systemd service for static_server"
      become: true
      copy:
        dest: /etc/systemd/system/supernanny-frontend.service
        mode: '0644'
        content: |
          [Unit]
          Description=SuperNanny Static Server
          After=network.target

          [Service]
          User={{ ansible_user_id }}
          WorkingDirectory={{ static_server_dir }}
          Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:{{ user_home }}/.cargo/bin"
          Environment="RUST_LOG=info"
          ExecStart={{ static_server_binary }}
          Restart=on-failure
          RestartSec=5
          PrivateTmp=yes
          ProtectSystem=full

          [Install]
          WantedBy=multi-user.target
      notify: restart frontend

  handlers:
    - name: restart frontend
      become: true
      systemd:
        name: supernanny-frontend
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: check service status
      become: true
      shell: systemctl status supernanny-frontend || journalctl -xe -u supernanny-frontend
      register: service_status
      changed_when: false
      failed_when: false
      listen: restart frontend
