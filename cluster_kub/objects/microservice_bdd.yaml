apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-bdd
  labels:
    app: microservice
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: microservice
  template:
    metadata:
      labels:
        app: microservice
    spec:
      containers:
      - name: microservice
        image: sanqyh/supernanny-axiom:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: DB_HOST
            value: postgres
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: sandboxdb
          - name: DB_USER
            value: sandboxuser
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
        livenessProbe:
          httpGet:
            path: /whoami
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60
        resources:
          limits:
            cpu: "1"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "2Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-service
spec:
  selector:
    app: microservice
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
